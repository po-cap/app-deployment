[databases]
; 定義 PgBouncer 將連接的後端 PostgreSQL 資料庫。
; 格式為：<池名稱> = host=<PostgreSQL主機> port=<PostgreSQL端口> dbname=<PostgreSQL資料庫名> user=<PgBouncer連接到後端的用戶> password=<PgBouncer連接到後端的用戶密碼>
; 也可以在 'user' 和 'password' 這裡省略，讓 PgBouncer 使用客戶端提供的憑證連接後端。
; 如果你不希望將後端密碼寫在 ini 檔案中，可以通過 auth_query_user 方式獲取。

; 範例：應用程式連接時使用 'app_db' 這個池名稱，PgBouncer 會連到 localhost:5432 的 'my_real_database'
; app = host=localhost port=5432 dbname=app auth_user=XXX

; 如果客戶端連接時不指定資料庫名稱，或者想使用預設資料庫：
; * = host=localhost port=5432 dbname=postgres user=pgbouncer_backend_user password=backend_user_password


[pgbouncer]
; 這是 PgBouncer 服務本身的配置選項

; 監聽設定
listen_addr = 0.0.0.0             ; PgBouncer 監聽的 IP 地址。0.0.0.0 表示監聽所有可用網卡。
listen_port = 6432                ; PgBouncer 監聽的端口。這是客戶端連接的端口。

; 認證設定 (用於客戶端連接到 PgBouncer)
auth_type = md5                         ; 客戶端認證方式。常用：md5, hba, trust, cert, any.
                                        ; md5: 最常用，要求客戶端提供 MD5 密碼雜湊。
                                        ; hba: 類似 PostgreSQL 的 pg_hba.conf。
                                        ; trust: 不做認證 (不安全)。
auth_file = /etc/pgbouncer/userlist.txt ; 用戶列表檔案的路徑，用於 auth_type = md5。

; 連接池模式 (Pool Mode) - 非常重要！
; 決定了 PgBouncer 如何管理客戶端連接和後端伺服器連接的對應關係。
pool_mode = transaction           ; 主要模式有：
                                  ; session (會話池): 最簡單，一個客戶端連接一直佔用一個後端連接直到斷開。
                                  ;                    適用於事務持續整個會話的場景。
                                  ; transaction (事務池): 客戶端連接在事務結束後釋放後端連接。
                                  ;                       適合短事務，效率最高，但事務中不能使用 listen/notify 等。
                                  ; statement (語句池): 每個語句執行後釋放後端連接。
                                  ;                     最激進，但不建議使用，因為會導致許多問題 (如序列亂跳)。
                                  ;                      當你的應用程式不使用事務時，此模式會表現得像事務模式。
                                  ; 還有其他模式如: connection (別名為 session), client, client_server 等，
                                  ; 但 transaction 是最常用且推薦的。

; 連接池大小限制
max_client_conn = 1000            ; PgBouncer 允許的最大客戶端連接數。
default_pool_size = 20            ; 每個資料庫池預設維護的後端連接數。
min_pool_size = 0                 ; 每個資料庫池在空閒時至少保留的後端連接數。
reserve_pool_size = 0             ; 預留連接，當 default_pool_size 滿時使用。
reserve_pool_timeout = 5.0        ; 預留池的超時時間 (秒)。

; 連接超時設定
server_idle_timeout = 600         ; 後端連接空閒多久後關閉 (秒)。
client_idle_timeout = 3600        ; 客戶端連接空閒多久後關閉 (秒)。

; SSL/TLS 設定 (用於客戶端連接到 PgBouncer)
; 如果客戶端需要 SSL，這裡必須設定。
client_tls_sslmode = require      ; 客戶端連接 PgBouncer 的 SSL 模式。
                                  ; disable, allow, prefer, require, verify-ca, verify-full
                                  ; require：必須使用 SSL，但不驗證憑證。
                                  ; verify-ca：必須使用 SSL，驗證伺服器憑證是否由信任的 CA 簽署。
                                  ; verify-full：必須使用 SSL，驗證憑證和 Common Name。
client_tls_cert_file = /etc/pgbouncer/pgbouncer_server.crt ; PgBouncer 伺服器憑證路徑
client_tls_key_file = /etc/pgbouncer/pgbouncer_server.key  ; PgBouncer 伺服器私鑰路徑
;client_tls_ca_file =             ; 如果 client_tls_sslmode 設為 verify-ca 或 verify-full，
                                  ; 這裡可以指定用於驗證客戶端憑證的 CA 憑證 (如果客戶端也提供憑證)。

; SSL/TLS 設定 (用於 PgBouncer 連接到後端 PostgreSQL)
; 如果後端 PostgreSQL 伺服器設定了 SSL，這裡也要設定。
;server_tls_sslmode = prefer       ; PgBouncer 連接到後端 PostgreSQL 的 SSL 模式。
;server_tls_ca_file =             ; 用於驗證後端 PostgreSQL 憑證的 CA 憑證路徑。

; 日誌與 PID 檔案å
;logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/run/pgbouncer/pgbouncer.pid

; 管理員用戶
admin_userås = doadmin             ; 允許登入 PgBouncer 管理控制台的用戶列表 (在 userlist.txt 中定義)。
;stats_users = stats_user          ; 允許查看統計資訊的用戶列表。

; 忽略客戶端啟動參數 (重要！)
; 有些 PostgreSQL 客戶端會發送一些參數，這些參數在連接池模式下可能引起問題。
; 務必將這些參數加入忽略列表，否則可能導致連接池錯亂。
ignore_startup_parameters = extra_float_digits,application_name,search_path,DateStyle,TimeZone,client_encoding,standard_conforming_strings

; 其他常見參數
;verbose = 0                       ; 日誌詳細程度 (0-3)
;log_connections = 1               ; 記錄連接事件
;log_disconnections = 1            ; 記錄斷開連接事件